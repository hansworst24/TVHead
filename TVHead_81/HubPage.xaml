<Page
    x:Class="TVHead_81.HubPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TVHead_81"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:TVHead_81.ViewModels"
    xmlns:cmd="using:GalaSoft.MvvmLight.Command"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" 
    NavigationCacheMode="Required"
    mc:Ignorable="d">

    <Page.Resources>
        <vm:StatusUpdateViewModel x:Key="MyTopHeader" x:Name="MyTopHeader" UpdateText="TVHeadend Server Comes Here" IsBusy="True"/>
        <CollectionViewSource x:Key="cvsEPGItems" Source="{Binding SelectedChannel.epgitems.groupeditems, Mode=TwoWay}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Key="cvsUpcomingRecordings" Source="{Binding UpcomingRecordings.groupeditems, Mode=TwoWay}" IsSourceGrouped="True" />
        <CollectionViewSource x:Key="cvsFinishedRecordings" Source="{Binding FinishedRecordings.groupeditems, Mode=TwoWay}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Key="cvsFailedRecordings" Source="{Binding FailedRecordings.groupeditems, Mode=TwoWay}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Key="cvsAutoRecordings" Source="{Binding AutoRecordings.items, Mode=TwoWay}" IsSourceGrouped="False"/>
        <CollectionViewSource x:Key="cvsAllChannels" Source="{Binding Channels.items}" IsSourceGrouped="False"/>
        <local:BoolToVisibilityConverter x:Key="myBoolVisConvertor"/>
    </Page.Resources>

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <ContinuumNavigationTransitionInfo/>
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>


    <!--<Grid x:Name="LayoutRoot" Background="{ThemeResource HubBackgroundImageBrush}">-->
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Margin="20,0,0,0" VerticalAlignment="Top" Canvas.ZIndex="100">
        		<local:ucTopHeader Canvas.ZIndex="100" VerticalAlignment="Bottom" DataContext="{Binding}"/>
        </Border>

        <Pivot Grid.Row="1" x:Uid="Pivot" SelectedIndex="{Binding PivotSelectedIndex, Mode=TwoWay}"
               Margin="0,-10,0,0">
            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Height="50"/>
                </DataTemplate>
            </Pivot.HeaderTemplate>
            <PivotItem x:Uid="pviChannelList" Header="Channels" Margin="10,0,10,0" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ComboBox ItemsSource="{Binding ChannelTags.items}" HorizontalAlignment="Stretch">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <ListView Grid.Row="1"  ItemsSource="{Binding Source={StaticResource cvsAllChannels}}"
                        ContinuumNavigationTransitionInfo.ExitElementContainer="True">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,5" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <local:ucChannelEPGDetail />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                
            </PivotItem>
            <PivotItem x:Uid="pviChannelEPG" Header="EPG Items"  Margin="10,0,10,0" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="0">
                        <Image x:Name="rowChannelIcon" Grid.Column="0" Grid.Row="0"  Width="40" Height="40"
                           HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image.Source>
                                <BitmapImage UriSource="{Binding SelectedChannel.chicon}"/>
                            </Image.Source>
                        </Image>
                        <Border Margin="10,0,0,0" VerticalAlignment="Center">
                            <TextBlock Text="{Binding SelectedChannel.name}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource SubheaderTextBlockStyle}"/>
                        </Border>
                    </StackPanel>

                    <Border Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Visibility="{Binding EPGInformationAvailable, Converter={StaticResource myBoolVisConvertor}, Mode=TwoWay}">
                        <TextBlock x:Uid="tbNoEPGAvailable" Text="For this channel no EPG Information exists" TextWrapping="Wrap" Style="{StaticResource SubTitle}"/>
                    </Border>
                    <Border Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Visibility="{Binding ChannelSelected, Converter={StaticResource myBoolVisConvertor}, Mode=TwoWay}">
                        <TextBlock x:Uid="tbNoChannelSelected" Text="No channel has been selected. Click on the channel's icon on the left to load the EPG." TextWrapping="Wrap" Style="{StaticResource SubTitle}"/>
                    </Border>
                    <SemanticZoom Grid.Row="1" Grid.RowSpan="2">
                        <SemanticZoom.ZoomedInView>
                            <ListView ItemsSource="{Binding Source={StaticResource cvsEPGItems}, Mode=TwoWay}" 
                                      ContinuumNavigationTransitionInfo.ExitElementContainer="True"
                                      Style="{StaticResource myListViewStyle}">
                                
                                <ListView.GroupStyle>
                                    <GroupStyle HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                </ListView.GroupStyle>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0,0,0,-20" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <local:ucActiveProgram />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView Background="Black" ItemsSource="{Binding Source={StaticResource cvsEPGItems}, Path=CollectionGroups}"
                                      ItemTemplate="{StaticResource ListViewJumpListTemplate}">
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                </Grid>
            </PivotItem>
            <PivotItem x:Uid="pviUpcomingRecordings" Header="Upcoming Recordings"  Margin="5,0,5,0" >
                <Grid>
                    <Border Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Visibility="{Binding UpcomingRecordings.NoRecordingsAvailableVisibility, Mode=TwoWay}">
                        <TextBlock x:Uid="tbNoUpcomingRecordings" Text="No channel has been selected. Click on the channel's icon on the left to load the EPG." TextWrapping="Wrap" Style="{StaticResource SubTitle}"/>
                    </Border>
                    <SemanticZoom>
                        <SemanticZoom.ZoomedInView>
                            <ListView ItemsSource="{Binding Source={StaticResource cvsUpcomingRecordings}}"
                                      ContinuumNavigationTransitionInfo.ExitElementContainer="True"
                                      Style="{StaticResource myListViewStyle}"
                                      SelectionMode="{Binding UpcomingRecordings.MultiSelectMode, Mode=TwoWay}">
                                <ListView.GroupStyle>
                                    <GroupStyle HidesIfEmpty="False" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                </ListView.GroupStyle>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <local:ucRecording />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:InvokeCommandAction Command="{Binding UpcomingRecordings.RecordingsSelectionChanged}"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView Background="Black" ItemsSource="{Binding Source={StaticResource cvsUpcomingRecordings}, Path=CollectionGroups}"
                                      ItemTemplate="{StaticResource ListViewJumpListTemplate}">
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                </Grid>
            </PivotItem>
            <PivotItem x:Uid="pviFinishedRecordings" Header="Finished Recordings"  Margin="5,0,5,0">
                <Grid>
                    <Border Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Visibility="{Binding FinishedRecordings.NoRecordingsAvailableVisibility, Mode=TwoWay}">
                        <TextBlock x:Uid="tbNoFinishedRecordings" TextWrapping="Wrap" Style="{StaticResource SubTitle}"/>
                    </Border>
                    <SemanticZoom>
                        <SemanticZoom.ZoomedInView>
                            <ListView ItemsSource="{Binding Source={StaticResource cvsFinishedRecordings}}" 
                                      ContinuumNavigationTransitionInfo.ExitElementContainer="True"
                                      Style="{StaticResource myListViewStyle}"
                                      SelectionMode="{Binding FinishedRecordings.MultiSelectMode, Mode=TwoWay}">
                                <ListView.GroupStyle>
                                    <GroupStyle HidesIfEmpty="False" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                </ListView.GroupStyle>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <local:ucRecording />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:InvokeCommandAction Command="{Binding FinishedRecordings.RecordingsSelectionChanged}"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView Background="Black" ItemsSource="{Binding Source={StaticResource cvsFinishedRecordings}, Path=CollectionGroups}"
                                      ItemTemplate="{StaticResource ListViewJumpListTemplate}">
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                </Grid>
            </PivotItem>
            <PivotItem x:Uid="pviFailedRecordings" Header="Failed Recordings"  Margin="5,0,5,0" >
                <Grid>
                    <Border Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Visibility="{Binding FailedRecordings.NoRecordingsAvailableVisibility, Mode=TwoWay}">
                        <TextBlock x:Uid="tbNoFailedRecordings" TextWrapping="Wrap" Style="{StaticResource SubTitle}"/>
                    </Border>
                    <SemanticZoom>
                        <SemanticZoom.ZoomedInView>
                            <ListView ItemsSource="{Binding Source={StaticResource cvsFailedRecordings}}" 
                                  ContinuumNavigationTransitionInfo.ExitElementContainer="True"
                                  Style="{StaticResource myListViewStyle}"
                                  SelectionMode="{Binding FailedRecordings.MultiSelectMode, Mode=TwoWay}">
                                <ListView.GroupStyle>
                                    <GroupStyle HidesIfEmpty="False" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                </ListView.GroupStyle>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <local:ucRecording />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:InvokeCommandAction Command="{Binding FailedRecordings.RecordingsSelectionChanged}"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView Background="Black" ItemsSource="{Binding Source={StaticResource cvsFailedRecordings}, Path=CollectionGroups}"
                                  ItemTemplate="{StaticResource ListViewJumpListTemplate}">
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                </Grid>
            </PivotItem>
            <PivotItem x:Uid="pviAutoRecordings" Header="Auto Recordings"  Margin="5,0,5,0" >
                <Grid>
                    <Border Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Visibility="{Binding AutoRecordings.NoRecordingsAvailableVisibility, Mode=TwoWay}">
                        <TextBlock x:Uid="tbNoAutoRecordings" TextWrapping="Wrap" Style="{StaticResource SubTitle}"/>
                    </Border>
                    <ListView ItemsSource="{Binding Source={StaticResource cvsAutoRecordings}}" SelectionMode="{Binding AutoRecordings.MultiSelectMode, Mode=TwoWay}"
                        ContinuumNavigationTransitionInfo.ExitElementContainer="True">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,10" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <local:ucAutoRecording />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="SelectionChanged">
                                <Core:InvokeCommandAction Command="{Binding AutoRecordings.RecordingsSelectionChanged}"/>
                                </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </ListView>
                </Grid>
                
         
            </PivotItem>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="SelectionChanged">
                    <Core:InvokeCommandAction Command="{Binding PivotSelectionChanged}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Pivot>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar Visibility="{Binding AppBar.CommandBarVisibility}">
            <AppBarButton x:Uid="abbRefresh" Label="refresh" IsEnabled="{Binding AppBar.ButtonEnabled.refreshButton, Mode=TwoWay}" Visibility="{Binding AppBar.ButtonVisibility.refreshButton}" Command="{Binding RefreshCommand}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/refresh.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbRecordings" Label="recordings" Visibility="{Binding AppBar.ButtonVisibility.recordingsButton}" Command="{Binding GoToRecordingsCommand}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/feature.alarm.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbChannels" Label="channels" Visibility="{Binding AppBar.ButtonVisibility.epgButton}" Command="{Binding GoToChannelsCommand}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/feature.calendar.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbTags" x:Name="abbTags" Label="tags" Visibility="{Binding AppBar.ButtonVisibility.tagsButton}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/tag.png"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout local:BindableFlyout.ItemsSource="{Binding ChannelTags.items}"
                            local:BindableFlyout.IsOpen="{Binding ChannelTagFlyoutIsOpen, Mode=TwoWay}"
                            local:BindableFlyout.Parent="{Binding ElementName=abbTags}"
                            local:BindableFlyout.ItemTemplate="{StaticResource ChannelTagTemplate}"
                             Placement="Bottom">
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton x:Uid="abbManage" Label="manage" Visibility="{Binding AppBar.ButtonVisibility.manageButton}" Command="{Binding MultiSelectCommand}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/manage.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbSearch" Label="search" Visibility="{Binding AppBar.ButtonVisibility.searchButton}" Command="{Binding SearchCommand}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/feature.search.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbAdd" Label="add" Visibility="{Binding AppBar.ButtonVisibility.addButton}" Command="{Binding AddCommand}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/add.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbDelete" Label="delete" IsEnabled="{Binding AppBar.ButtonEnabled.deleteButton, Mode=TwoWay}" Command="{Binding DeleteSelectedRecordings}" Visibility="{Binding AppBar.ButtonVisibility.deleteButton}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/delete.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbSave" Label="save" Visibility="{Binding AppBar.ButtonVisibility.saveButton}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/save.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbCancel" Label="cancel" Visibility="{Binding AppBar.ButtonVisibility.cancelButton}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/cancel.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
        
            
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="appBarSettings" Label="settings..." Command="{Binding SettingsCommand}"/>
                <AppBarButton x:Uid="appBarStatus" Label="tvheadend status" Command="{Binding StatusCommand}"/>
                <AppBarButton x:Uid="appBarAbout" Label="about" Command="{Binding AboutCommand}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>