<Page x:Name="pageRoot"
    x:Class="TVHead_81.AutoRecordingPage"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TVHead_81"
    xmlns:vm="using:TVHead_81.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    d:DesignHeight="1300"
    >
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <ContinuumNavigationTransitionInfo/>
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
	
		<Thickness x:Key="PhoneBorderThickness">2.5</Thickness>
		<FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
		<FontWeight x:Key="PhoneButtonFontWeight">Semibold</FontWeight>
		<x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
		<Thickness x:Key="PhoneButtonContentPadding">9.5,0,9.5,3.5</Thickness>
		<x:Double x:Key="PhoneButtonMinHeight">57.5</x:Double>
		<x:Double x:Key="PhoneButtonMinWidth">109</x:Double>
		<Thickness x:Key="PhoneTouchTargetOverhang">0,9.5</Thickness>
    </Page.Resources>



    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Title Panel -->
        <Border Grid.Row="0" Margin="20,0,0,0" VerticalAlignment="Top" Canvas.ZIndex="100">
            <local:ucTopHeader x:Name="TopHeader" Canvas.ZIndex="100" VerticalAlignment="Bottom" DataContext="{Binding}"/>
        </Border>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="9,0,0,0">
                <TextBlock Text="{Binding selectedAutoRecording.AutoRecordingViewTitle}" Height="50"  
                               FontFamily="{ThemeResource  PhoneFontFamilyNormal}"/>
            </StackPanel>
            
            <ScrollViewer Grid.Row="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="10" >
                <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                    <TextBlock x:Uid="tbName" VerticalAlignment="Center" Text="Name" FontSize="20"/>
                    <TextBox x:Name="tbNameEdit" HorizontalAlignment="Stretch" FontSize="25" Visibility="Visible" Margin="0,0,0,0"
                             Text="{Binding selectedAutoRecording.name, Mode=TwoWay}"  VerticalAlignment="Center"
                             HorizontalContentAlignment="Right" />
                    <TextBlock x:Uid="tbTitleRegExp" VerticalAlignment="Center" Text="Title (regexp)"  FontSize="20" Margin="0,20,0,0"/>
                    <TextBox x:Name="tbTitleEdit" FontSize="25" Visibility="Visible" Margin="0,0,0,0"
                        Text="{Binding selectedAutoRecording.title, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                     HorizontalContentAlignment="Right"/>
                    <ToggleButton x:Uid="tbEnabled" HorizontalAlignment="Stretch" Content="Enabled" 
                                  IsChecked="{Binding selectedAutoRecording.enabled, Mode=TwoWay}"/>
                    <TextBlock x:Uid="tbWeekDays" VerticalAlignment="Center" Text="Weekdays"  FontSize="20" Margin="0,20,0,0"/>
                    <Grid Margin="0,0,0,0" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="60"/>
                        </Grid.RowDefinitions>
                        <ToggleButton Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnMonday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Monday}" />
                        <ToggleButton Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnTuesday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Tuesday}" />
                        <ToggleButton Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnWednesday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Wednesday}" />
                        <ToggleButton Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnThursday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Thursday}" />
                        <ToggleButton Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnFriday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Friday}" />
                        <ToggleButton Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnSaturday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Saturday}" />
                        <ToggleButton Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" IsChecked="{Binding selectedAutoRecording.recordOnSunday, Mode=TwoWay}" Content="{Binding selectedAutoRecording.Sunday}" />
                    </Grid>
                    <TextBlock x:Uid="tbDVRConfig"  VerticalAlignment="Center" Text="DVR Config" FontSize="20" Margin="0,10,0,0"/>
                    <CheckBox x:Name="cbDVRConfigSelection" VerticalAlignment="Center" Margin="0,-15,0,0"
                                  IsChecked="{Binding selectedAutoRecording.DVRConfigSelectionEnabled, Mode=TwoWay}" 
                                  HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                        <CheckBox.Content>
                            <Button x:Name="btnDVRConfig" Margin="0,-10,0,0" HorizontalAlignment="Stretch" 
                                    BorderThickness="2" IsEnabled="{Binding ElementName=cbDVRConfigSelection, Path=IsChecked}" >
                                <Button.Flyout>
                                    <Flyout Opened="Flyout_Opened" Closed="Flyout_Closed" Placement="Full"
                                            local:FlyoutHelpers.Parent="{Binding ElementName=btnDVRConfig}"
                                            local:FlyoutHelpers.IsOpen="{Binding selectedAutoRecording.DVRConfigSelectionFlyOutIsOpen, Mode=TwoWay}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="80"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock x:Uid="tbDVRConfigSelection" Grid.Row="0" Text="Select DVR Config" Style="{ThemeResource SubTitleAccent}" />
                                            <ScrollViewer Grid.Row="2" VerticalAlignment="Top">
                                                <ListView  x:Name="lstDVRConfig" Height="500">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Height="60" Text="{Binding name}" />
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                    <Interactivity:Interaction.Behaviors>
                                                        <Core:EventTriggerBehavior EventName="SelectionChanged" >
                                                            <Core:InvokeCommandAction Command="{Binding selectedAutoRecording.UpdateSelectedDVRConfig}" CommandParameter="{Binding SelectedItem, ElementName=lstDVRConfig}"/>
                                                        </Core:EventTriggerBehavior>
                                                    </Interactivity:Interaction.Behaviors>
                                                </ListView>
                                            </ScrollViewer>
                                        </Grid>
                                    </Flyout>
                                </Button.Flyout>
                                <Button.Content>
                                    <Border Grid.Column="0" HorizontalAlignment="Stretch" BorderThickness="0" Padding="0">
                                        <TextBlock x:Name="tbDVRText" FontSize="20"
                                                        TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                        HorizontalAlignment="Right" Text="{Binding selectedAutoRecording.configName, Mode=TwoWay}"/>
                                    </Border>
                                </Button.Content>
                            </Button>
                        </CheckBox.Content>
                    </CheckBox>
                    <TextBlock x:Uid="tbChannel"  VerticalAlignment="Center" Text="Channel"  FontSize="20"/>
                    <CheckBox x:Name="cbChannelSelection" VerticalAlignment="Center" Margin="0,-15,0,0"
                                IsChecked="{Binding selectedAutoRecording.ChannelSelectionEnabled, Mode=TwoWay}" 
                                HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <CheckBox.Content>
                            <Button x:Name="btnChannel" IsEnabled="{Binding ElementName=cbChannelSelection, Path=IsChecked}" 
                                    Margin="0,-10,0,0"
                                    HorizontalAlignment="Stretch"
                                    BorderThickness="2">
                                <Button.Flyout>
                                    <Flyout Opened="Flyout_Opened" Closed="Flyout_Closed" Placement="Full"
                                        local:FlyoutHelpers.Parent="{Binding ElementName=btnChannel}"
                                        local:FlyoutHelpers.IsOpen="{Binding selectedAutoRecording.ChannelSelectionFlyOutIsOpen, Mode=TwoWay}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="80"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock x:Uid="tbChannelSelection" Grid.Row="0" Text="Select Channel" Style="{ThemeResource SubTitleAccent}"/>
                                            <TextBlock x:Uid="tbChannelSelectionExplanation" TextWrapping="WrapWholeWords" Grid.Row="1" Text="blaat" />
                                            <TextBox Grid.Row="2" x:Name="tbChannelSearch" KeyUp="tbChannelSearch_KeyUp"/>
                                            <ScrollViewer Grid.Row="3" VerticalAlignment="Top">
                                                <ListView  x:Name="lstChannels" Height="500"  >
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <local:ucChannel DataContext="{Binding}"/>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                    <Interactivity:Interaction.Behaviors>
                                                        <Core:EventTriggerBehavior EventName="SelectionChanged" >
                                                            <Core:InvokeCommandAction Command="{Binding selectedAutoRecording.UpdateSelectedChannel}" CommandParameter="{Binding SelectedItem, ElementName=lstChannels}"/>
                                                        </Core:EventTriggerBehavior>
                                                    </Interactivity:Interaction.Behaviors>
                                                </ListView>
                                            </ScrollViewer>
                                        </Grid>
                                    </Flyout>
                                </Button.Flyout>
                                <Button.Content>
                                    <Border Grid.Column="0" HorizontalAlignment="Stretch" BorderThickness="0" Padding="0">
                                        <TextBlock x:Name="tbChannelText" FontSize="20"
                                    TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                    HorizontalAlignment="Right" Text="{Binding selectedAutoRecording.channelname, Mode=TwoWay}"/>
                                    </Border>
                                </Button.Content>
                            </Button>
                        </CheckBox.Content>
                    </CheckBox>
                    <TextBlock x:Uid="tbChannelTag" VerticalAlignment="Center" Text="Channel Tag" FontSize="20"/>
                    <CheckBox x:Name="cbChannelTagSelection" VerticalAlignment="Center" Margin="0,-15,0,0"
                            IsChecked="{Binding selectedAutoRecording.ChannelTagSelectionEnabled, Mode=TwoWay}" 
                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <CheckBox.Content>
                            <Button x:Name="btnChannelTag" Margin="0,-10,0,0"
                                    IsEnabled="{Binding ElementName=cbChannelTagSelection, Path=IsChecked}"
                                    HorizontalAlignment="Stretch" BorderThickness="2" >
                                <Button.Flyout>
                                    <Flyout Opened="Flyout_Opened" Closed="Flyout_Closed" Placement="Full"
                                        local:FlyoutHelpers.Parent="{Binding ElementName=btnChannelTag}"
                                        local:FlyoutHelpers.IsOpen="{Binding selectedAutoRecording.ChannelTagSelectionFlyOutIsOpen, Mode=TwoWay}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="80"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock x:Uid="tbChannelTagSelection" Grid.Row="0" Text="Select Channel Tag..." Style="{ThemeResource SubTitleAccent}" />
                                            <ScrollViewer Grid.Row="2" VerticalAlignment="Top">
                                                <ListView  x:Name="lstChannelTag" Height="500">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Height="60" Text="{Binding name}" />
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                    <Interactivity:Interaction.Behaviors>
                                                        <Core:EventTriggerBehavior EventName="SelectionChanged" >
                                                            <Core:InvokeCommandAction Command="{Binding selectedAutoRecording.UpdateSelectedChannelTag}" CommandParameter="{Binding SelectedItem, ElementName=lstChannelTag}"/>
                                                        </Core:EventTriggerBehavior>
                                                    </Interactivity:Interaction.Behaviors>
                                                </ListView>
                                            </ScrollViewer>
                                        </Grid>
                                    </Flyout>
                                </Button.Flyout>
                                <Button.Content>
                                    <Border Grid.Column="0" HorizontalAlignment="Stretch" BorderThickness="0" Padding="0">
                                        <TextBlock x:Name="tbChannelTag" FontSize="20"
                                                    TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Right" Text="{Binding selectedAutoRecording.tagName, Mode=TwoWay}"/>
                                    </Border>
                                </Button.Content>
                            </Button>
                        </CheckBox.Content>
                    </CheckBox>
                    <TextBlock VerticalAlignment="Center" Text="Genre"  FontSize="20"/>
                    <CheckBox x:Name="cbGenreSelection" VerticalAlignment="Center" Margin="0,-15,0,0"
                              IsChecked="{Binding selectedAutoRecording.GenreSelectionEnabled, Mode=TwoWay}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <CheckBox.Content>
                            <Button x:Name="btnGenre" HorizontalAlignment="Stretch" Margin="0,-10,0,0" 
                                    IsEnabled="{Binding ElementName=cbGenreSelection, Path=IsChecked}"
                                    HorizontalContentAlignment="Stretch" BorderThickness="2" >
                                <Button.Flyout>
                                    <Flyout Opened="Flyout_Opened" Closed="Flyout_Closed" Placement="Full"
                                            local:FlyoutHelpers.Parent="{Binding ElementName=btnGenre}"
                                            local:FlyoutHelpers.IsOpen="{Binding selectedAutoRecording.GenreSelectionFlyOutIsOpen, Mode=TwoWay}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="80"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock x:Uid="tbGenreSelection" Grid.Row="0" Text="Select Genre" Style="{ThemeResource SubTitleAccent}"/>
                                            <ScrollViewer Grid.Row="2" VerticalAlignment="Top">
                                                <ListView  x:Name="lstGenre" Height="500">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Height="60" Text="{Binding name}"/>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                    <Interactivity:Interaction.Behaviors>
                                                        <Core:EventTriggerBehavior EventName="SelectionChanged" >
                                                            <Core:InvokeCommandAction Command="{Binding selectedAutoRecording.UpdateSelectedGenre}" CommandParameter="{Binding SelectedItem, ElementName=lstGenre}"/>
                                                        </Core:EventTriggerBehavior>
                                                    </Interactivity:Interaction.Behaviors>
                                                </ListView>
                                            </ScrollViewer>
                                        </Grid>
                                    </Flyout>
                                </Button.Flyout>
                                <Button.Content>
                                    <Border Grid.Column="0" HorizontalAlignment="Stretch" BorderThickness="0" Padding="0">
                                        <TextBlock x:Name="tbGenre" FontSize="20"
                                                            TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                            HorizontalAlignment="Center" Text="{Binding selectedAutoRecording.contenttypeName, Mode=TwoWay}"/>
                                    </Border>
                                </Button.Content>
                            </Button>
                        </CheckBox.Content>
                    </CheckBox>
                    <TextBlock x:Uid="tbStartAfter" VerticalAlignment="Center" Text="Start After" FontSize="20"/>
                    <CheckBox x:Name="cbStartAfterEnabled" Margin="0,-15,0,0"  VerticalAlignment="Center"
                               IsChecked="{Binding selectedAutoRecording.startafter_isenabled, Mode=TwoWay}" HorizontalAlignment="Stretch">
                        <CheckBox.Content>
                            <TimePicker x:Name="tpTimePicker" IsEnabled="{Binding ElementName=cbStartAfterEnabled,Path=IsChecked}" 
                                            Width="180" Margin="0,-10,0,0" Language="ru-RU"
                                            BorderThickness="2" FontSize="20" HorizontalAlignment="Stretch" 
                                            Time="{Binding selectedAutoRecording.startTime, Mode=TwoWay}"/>
                        </CheckBox.Content>
                    </CheckBox>
                    <TextBlock x:Uid="tbStartBefore" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Start Before" FontSize="20"/>
                    <CheckBox x:Name="cbStartBeforeEnabled" VerticalAlignment="Center" Margin="0,-15,0,0"
                               IsChecked="{Binding selectedAutoRecording.startbefore_isenabled, Mode=TwoWay}" HorizontalAlignment="Stretch">
                        <CheckBox.Content>
                            <TimePicker x:Name="tpStartWindow" IsEnabled="{Binding ElementName=cbStartBeforeEnabled,Path=IsChecked}"
                                        Width="180" Margin="0,-10,0,0"
                                        BorderThickness="2" FontSize="20"
                                        HorizontalAlignment="Right" Time="{Binding selectedAutoRecording.start_window_Time, Mode=TwoWay}"/>
                        </CheckBox.Content>
                    </CheckBox>
                </StackPanel>
                
            </ScrollViewer>
        </Grid>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Uid="abbSave" Label="save" Command="{Binding selectedAutoRecording.SaveAutoRecording}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/save.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Uid="abbCancel" Label="cancel" Command="{Binding selectedAutoRecording.CancelAutoRecordingEditing}">
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Images/cancel.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>
</Page>