<Page
    x:Class="TVHead_81.EPG_WideView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TVHead_81"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:TVHead_81.ViewModels"
    xmlns:cmd="using:GalaSoft.MvvmLight.Command"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" 
    NavigationCacheMode="Required"
    RequestedTheme="Dark"
    d:DesignHeight="480"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Page.Resources>
        <vm:StatusUpdateViewModel x:Key="MyTopHeader" x:Name="MyTopHeader" UpdateText="TVHeadend Server Comes Here" IsBusy="True"/>
        <CollectionViewSource x:Key="cvsEPGItems" Source="{Binding SelectedChannel.groupeditems, Mode=OneWay}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Key="cvsUpcomingRecordings" Source="{Binding UpcomingRecordings.groupeditems, Mode=OneWay}" IsSourceGrouped="True" />
        <CollectionViewSource x:Key="cvsFinishedRecordings" Source="{Binding FinishedRecordings.groupeditems, Mode=OneWay}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Key="cvsFailedRecordings" Source="{Binding FailedRecordings.groupeditems, Mode=OneWay}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Key="cvsAutoRecordings" Source="{Binding AutoRecordings.items, Mode=OneWay}" IsSourceGrouped="False"/>

        <CollectionViewSource x:Key="cvsLogMessages" Source="{Binding logmessages.entries, Mode=OneWay}"/>
        <CollectionViewSource x:Key="cvsAdapters" Source="{Binding Streams.items, Mode=OneWay}"/>
        <CollectionViewSource x:Key="cvsSubscriptions" Source="{Binding Subscriptions.items, Mode=OneWay}"/>
        <CollectionViewSource x:Key="cvsServices" Source="{Binding Services.items, Mode=OneWay}"/>
        <CollectionViewSource x:Key="cvsMuxes" Source="{Binding Muxes.items, Mode=OneWay}"/>

        <local:BoolToVisibilityConverter x:Key="myBoolVisConvertor"/>
    </Page.Resources>

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <ContinuumNavigationTransitionInfo/>
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>


    <!--<Grid x:Name="LayoutRoot" Background="{ThemeResource HubBackgroundImageBrush}">-->
    <Grid x:Name="LayoutRoot" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="abbEventInfo.Visibility" Value="Collapsed"/>
                        <Setter Target="abbTVHStatus.Visibility" Value="Collapsed"/>
                        <Setter Target="EPGItemView.Visibility" Value="Visible"/>
                        <Setter Target="ChannelsColumn.Width" Value="2*"/>
                        <Setter Target="EPGItemsColumn.Width" Value="2*"/>
                        <Setter Target="EPGItemColumn.Width" Value="3*"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="MenuStates">
                <VisualState x:Name="ShowMenu">
                    <Storyboard>
                        <DoubleAnimation To="0" Storyboard.TargetName="MenuTranslate" Storyboard.TargetProperty="X" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <CircleEase EasingMode="EaseOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="HideMenu">
                    <Storyboard>
                        <DoubleAnimation To="-300" Storyboard.TargetName="MenuTranslate" Storyboard.TargetProperty="X" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <CircleEase EasingMode="EaseOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <!--<RowDefinition Height="30"/>-->
            <RowDefinition Height="*"/>
            <!--<RowDefinition Height="*"/>-->
        </Grid.RowDefinitions>
        <!-- THE TOP HEADER OF TV HEAD-->
        <!--<Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="20,0,0,0" VerticalAlignment="Top" Canvas.ZIndex="100">
        		<local:ucTopHeader Canvas.ZIndex="100" VerticalAlignment="Bottom" DataContext="{Binding}"/>
        </Border>-->
        <!-- THE BOTTOM NOTIFICATION BAR-->
        <Border Grid.Row="0" VerticalAlignment="Bottom" Height="48" Canvas.ZIndex="100">
            <local:ucNotificationMessage DataContext="{Binding Notify}"/>
        </Border>

       

        <!-- THE SUB HEADER -->
        <!--<Grid Grid.Row="0" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" BorderThickness="0,1,0,1" BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
        </Grid>-->
        <!-- THE CONTENT AREA -->
        <Grid Grid.Row="0" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" Canvas.ZIndex="99">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ChannelsColumn" Width="*"/>
                <ColumnDefinition x:Name="EPGItemsColumn" Width="*"/>
                <ColumnDefinition x:Name="EPGItemColumn" Width="0"/>
            </Grid.ColumnDefinitions>
            <!-- THIS IS THE LEFT COLUMN WHERE THE CHANNEL LIST APPEARS-->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ComboBox x:Name="ChannelTagList" Grid.Column="0" Grid.Row="0" Height="40" ItemsSource="{Binding ChannelTags.items}" 
                      HorizontalAlignment="Stretch" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
                      BorderThickness="0" SelectedItem="{Binding ChannelTags.selectedChannelTag}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding name}"  Style="{StaticResource TitleTextBlockStyle}" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="SelectionChanged" SourceObject="{Binding ElementName=ChannelTagList}">
                            <Core:InvokeCommandAction Command="{Binding ChannelTagListSelectionChanged}" CommandParameter="{Binding ElementName=ChannelTagList, Path=SelectedItem}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </ComboBox>
                <!--<ComboBox Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Channels.items}" Width="300" HorizontalAlignment="Stretch" Height="90">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Width" Value="300"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <local:ucChannelEPGDetail />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>-->
                <ListView x:Name="ChannelList" Grid.Column="0" Visibility="Visible" Grid.Row="1" ItemsSource="{Binding Channels.items}" 
                          BorderThickness="0,1,1,0" BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" 
                          ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0,0,0,0" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Button Background="Transparent" Padding="0" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                                <Button.Content>
                                    <local:ucChannelEPGDetail />
                                </Button.Content>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click">
                                        <Core:InvokeCommandAction Command="{Binding DataContext.ChannelSelectedCommand, ElementName=ChannelList}" 
                                                                          CommandParameter="{Binding}"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </Button>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
             <!-- THIS IS THE MIDDLE COLUMN WHERE THE EPG APPEARS FOR THE SELECTED CHANNEL-->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Height="40" Margin="40,0,0,0" Text="{Binding SelectedChannel.name}" Style="{StaticResource TitleTextBlockStyle}" TextWrapping="NoWrap" HorizontalAlignment="Center"/>
                <Image Grid.Row="0" Width="40" Height="40" Source="{Binding SelectedChannel.chicon}" HorizontalAlignment="Left"/>
                <ContentControl Grid.Row="1" ContentTemplate="{StaticResource EPGItemListDataTemplate}" DataContext="{x:Bind vm.SelectedChannel.epgitems}"/>
                
            </Grid>
            <!-- THIS IS THE RIGHT COLUMN WHERE THE SELECTED EPGITEM DETAILS AND ACTIONS (REC, ABORT REC, ETC) APPEAR-->
            <Grid x:Name="EPGItemView" Grid.Column="2" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Height="40" HorizontalAlignment="Stretch" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" >
                    <TextBlock Height="40" HorizontalAlignment="Center" Text="{Binding selectedEPGItem.title}" Style="{StaticResource TitleTextBlockStyle}" TextWrapping="NoWrap"/>
                </Border>
                <Grid Grid.Row="1" BorderThickness="1,1,0,0" BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <!--<local:ucEPGEntryDetail Grid.Row="0" DataContext="{Binding selectedEPGItem}"/>-->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,48" >
                        <Button Content="Record" Margin="20,0,20,0"/>
                        <Button Content="Abort Recording" Margin="20,0,20,0"/>
                        <Button Content="Search" Margin="20,0,20,0"/>
                        <Button Content="Delete" Margin="20,0,20,0"/>
                    </StackPanel>
                </Grid>
                <ContentControl Grid.Row="2" ContentTemplate="{StaticResource CometStatistics}" DataContext="{x:Bind vm.CometCatcher.CometStatistics}" HorizontalContentAlignment="Stretch"/>
                <ContentControl Grid.Row="3" ContentTemplate="{StaticResource TVHStatus}" HorizontalContentAlignment="Stretch"/>
            </Grid>
            <ContentControl ContentTemplate="{StaticResource SettingsMenuDataTemplate}" 
                        DataContext="{x:Bind vm.TVHeadSettings}" Width="300" HorizontalAlignment="Left">
                <ContentControl.RenderTransform>
                    <TranslateTransform x:Name="MenuTranslate" X="-300"/>
                </ContentControl.RenderTransform>
            </ContentControl>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{x:Bind vm.MenuIsOpen, Mode=OneWay}" Value="False">
                    <Core:GoToStateAction StateName="HideMenu"/>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{x:Bind vm.MenuIsOpen, Mode=OneWay}" Value="True">
                    <Core:GoToStateAction StateName="ShowMenu"/>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Grid>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar IsOpen="False" IsSticky="False" ClosedDisplayMode="Compact" HorizontalContentAlignment="Stretch" Width="{Binding ElementName=RootSplitView, Path=ActualWidth}">
            <CommandBar.Content>
                <Grid HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Horizontal">
                        <AppBarButton Width="48" HorizontalAlignment="Left" Command="{x:Bind vm.MenuButtonClickedCommand, Mode=OneWay}" VerticalAlignment="Center" Height="48">
                            <AppBarButton.Icon>
                                <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE700;"/>
                            </AppBarButton.Icon>
                        </AppBarButton>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <AppBarButton Width="48" Height="48" Margin="0,-20,0,-20" Padding="0,-10,0,-10" VerticalAlignment="Center" IsEnabled="{x:Bind vm.RecordSelectedEPGItemButtonEnabled, Mode=OneWay}" Click="{x:Bind vm.selectedEPGItem.Record}">
                            <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE1D2;" Foreground="{x:Bind vm.selectedEPGItem.RecordingIconColor, Mode=OneWay}"/>
                        </AppBarButton>
                        <!--<AppBarButton x:Name="abbEventInfo"  Visibility="Visible" Margin="20,0,0,0" Width="48" Height="48" IsEnabled="{x:Bind vm.RecordSelectedEPGItemButtonEnabled, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <AppBarButton.Icon>
                                <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xEC42;"/>
                            </AppBarButton.Icon>
                        </AppBarButton>-->
                        <AppBarButton x:Name="abbTVHStatus" Visibility="Visible"  Margin="20,0,0,0" Padding="0" Width="48"  Height="48" Click="{x:Bind vm.ShowStreamStatus, Mode=OneWay}">
                            <AppBarButton.Icon>
                                <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE950;"/>
                            </AppBarButton.Icon>
                        </AppBarButton>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <AppBarToggleButton HorizontalAlignment="Right" 
                                            VerticalAlignment="Center" Height="48" Width="48" 
                                            IsChecked="{x:Bind vm.TVHeadSettings.AutoRefreshEnabled, FallbackValue=False, Mode=TwoWay}"
                                            Style="{StaticResource TVHeadAppBarToggleButton}">
                         
                            <AppBarToggleButton.Icon>
                                <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE895;"/>
                            </AppBarToggleButton.Icon>
                            <AppBarToggleButton.RenderTransform>
                                <RotateTransform CenterX="24" CenterY="24" Angle="{x:Bind vm.CometCatcher.CometRotation, Mode=OneWay}"/>
                            </AppBarToggleButton.RenderTransform>
                        </AppBarToggleButton>
                    </StackPanel>
                </Grid>
            </CommandBar.Content>
        </CommandBar>
    </Page.BottomAppBar>
   
    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="Loaded">
            <Core:InvokeCommandAction Command="{Binding PageLoadedCommand}"/>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>
</Page>