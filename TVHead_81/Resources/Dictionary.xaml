<ResourceDictionary
    x:Class="TVHead_81.MyResourceDictionary"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"  
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:local="using:TVHead_81"
    xmlns:vm="using:TVHead_81.ViewModels">

    <DataTemplate x:Key="ContentDialogEditAutoRecording" x:DataType="local:AutoRecordingEditViewModel">
        <Grid VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Hidden" Margin="0,0,0,0">
                <Grid>
                <StackPanel>
                    <TextBlock x:Uid="tbName" VerticalAlignment="Center" Text="Name" Style="{StaticResource BodyTextBlockStyle}"/>
                    <TextBox x:Name="tbNameEdit" HorizontalAlignment="Stretch"
                             Text="{Binding name, Mode=TwoWay}"  VerticalAlignment="Center"
                             HorizontalContentAlignment="Right" />
                    <TextBlock x:Uid="tbTitleRegExp" VerticalAlignment="Center" Text="Title (regexp)" Style="{StaticResource BodyTextBlockStyle}" Margin="0,20,0,0"/>
                    <TextBox x:Name="tbTitleEdit"  Visibility="Visible" Margin="0,0,0,0"
                        Text="{Binding title, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                     HorizontalContentAlignment="Right"/>
                    <ToggleSwitch x:Uid="tsEnabled" HorizontalAlignment="Stretch" OffContent="disabled" OnContent="enabled" 
                                  IsOn="{Binding enabled, Mode=TwoWay}"/>
                    <TextBlock x:Uid="tbWeekDays" VerticalAlignment="Center" Text="Weekdays" Margin="0,20,0,0"  Style="{StaticResource BodyTextBlockStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0" IsChecked="{x:Bind RecordingOnDay[0], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[0]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                        <CheckBox Grid.Column="1" IsChecked="{x:Bind RecordingOnDay[1], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[1]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                        <CheckBox Grid.Column="2" IsChecked="{x:Bind RecordingOnDay[2], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[2]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                        <CheckBox Grid.Column="3" IsChecked="{x:Bind RecordingOnDay[3], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[3]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                        <CheckBox Grid.Column="4" IsChecked="{x:Bind RecordingOnDay[4], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[4]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                        <CheckBox Grid.Column="5" IsChecked="{x:Bind RecordingOnDay[5], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[5]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                        <CheckBox Grid.Column="6" IsChecked="{x:Bind RecordingOnDay[6], Mode=TwoWay}" IsEnabled="True" Style="{StaticResource DayCheckBoxStyle}">
                            <TextBlock Text="{x:Bind RecordingDays[6]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </CheckBox>
                    </Grid>
                    <TextBlock VerticalAlignment="Center" Text="DVR Config" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                    <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding dvrconfiglist}" SelectedItem="{Binding selecteddvrconfig, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock VerticalAlignment="Center" Text="Content Type" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                    <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding contenttypelist}" SelectedItem="{Binding selectedcontenttype, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock VerticalAlignment="Center" Text="Channel" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                    <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding channellist}" SelectedItem="{Binding selectedchannel, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <ContentControl ContentTemplate="{StaticResource ChannelListItemTemplate}" HorizontalContentAlignment="Stretch"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock VerticalAlignment="Center" Text="Channel Tag" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                    <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding channeltaglist}" SelectedItem="{Binding selectedchanneltag, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock x:Uid="tbStartAfter" VerticalAlignment="Center" Text="Start After" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding StartAfterEnabled, Mode=TwoWay}"/>
                        <TimePicker Margin="-80,0,0,0"  IsEnabled="{Binding StartAfterEnabled, Mode=OneWay}" 
                                    Time="{Binding startTime, Mode=TwoWay}"/>
                    </StackPanel>
                    <TextBlock x:Uid="tbStartBefore" VerticalAlignment="Center" Text="Start Before" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox  IsChecked="{Binding StartBeforeEnabled, Mode=TwoWay}"/>
                        <TimePicker Margin="-80,0,0,0" IsEnabled="{Binding StartBeforeEnabled, Mode=OneWay}" 
                                    Time="{Binding start_window_Time, Mode=TwoWay}"/>
                    </StackPanel>
                    <TextBlock x:Uid="tbComment" VerticalAlignment="Center" Text="Comment" Style="{StaticResource BodyTextBlockStyle}"/>
                    <TextBox HorizontalAlignment="Stretch"
                             Text="{Binding comment, Mode=TwoWay}"  VerticalAlignment="Center"
                             HorizontalContentAlignment="Right" />

                        <!--<TextBlock x:Uid="tbStartAfter" VerticalAlignment="Center" Text="Start After" FontSize="20"/>
                    <CheckBox x:Name="cbStartAfterEnabled" Margin="0,-15,0,0"  VerticalAlignment="Center"
                               IsChecked="{Binding selectedAutoRecording.startafter_isenabled, Mode=TwoWay}" HorizontalAlignment="Stretch">
                        <CheckBox.Content>
                            <TimePicker x:Name="tpTimePicker" IsEnabled="{Binding ElementName=cbStartAfterEnabled,Path=IsChecked}" 
                                            Width="180" Margin="0,-10,0,0" Language="ru-RU"
                                            BorderThickness="2" FontSize="20" HorizontalAlignment="Stretch" 
                                            Time="{Binding selectedAutoRecording.startTime, Mode=TwoWay}"/>
                        </CheckBox.Content>
                    </CheckBox>
                    <TextBlock x:Uid="tbStartBefore" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Start Before" FontSize="20"/>
                    <CheckBox x:Name="cbStartBeforeEnabled" VerticalAlignment="Center" Margin="0,-15,0,0"
                               IsChecked="{Binding selectedAutoRecording.startbefore_isenabled, Mode=TwoWay}" HorizontalAlignment="Stretch">
                        <CheckBox.Content>
                            <TimePicker x:Name="tpStartWindow" IsEnabled="{Binding ElementName=cbStartBeforeEnabled,Path=IsChecked}"
                                        Width="180" Margin="0,-10,0,0"
                                        BorderThickness="2" FontSize="20"
                                        HorizontalAlignment="Right" Time="{Binding selectedAutoRecording.start_window_Time, Mode=TwoWay}"/>
                        </CheckBox.Content>
                    </CheckBox>-->
                </StackPanel>
                </Grid>
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ContentDialogAddRecording" x:DataType="local:RecordingEditViewModel">
        <Grid VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Hidden" Margin="0,0,0,0">
                <Grid>
                    <StackPanel>
                        <TextBlock x:Uid="tbTitle" VerticalAlignment="Center" Text="Name" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBox x:Name="tbTitleEdit" HorizontalAlignment="Stretch"
                             Text="{Binding title, Mode=TwoWay}"  VerticalAlignment="Center"
                             HorizontalContentAlignment="Right" />
                        <TextBlock VerticalAlignment="Center" Text="Channel" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                        <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding channellist}" SelectedItem="{Binding selectedchannel, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl ContentTemplate="{StaticResource ChannelListItemTemplate}" HorizontalContentAlignment="Stretch"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock VerticalAlignment="Center" Text="Start Date" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                        <DatePicker Date="{Binding start_date, Mode=TwoWay}" HorizontalAlignment="Stretch"/>
                        <TextBlock VerticalAlignment="Center" Text="Start Time" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TimePicker Time="{Binding startTime, Mode=TwoWay}" HorizontalAlignment="Stretch"/>
                        <TextBlock VerticalAlignment="Center" Text="End Date" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                        <DatePicker Date="{Binding stop_date, Mode=TwoWay}" HorizontalAlignment="Stretch"/>
                        <TextBlock VerticalAlignment="Center" Text="End Time" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TimePicker Time="{Binding stopTime, Mode=TwoWay}" HorizontalAlignment="Stretch"/>
                        <TextBlock VerticalAlignment="Center" Text="DVR Config" Margin="0,10,0,0" Style="{StaticResource BodyTextBlockStyle}"/>
                        <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding dvrconfiglist}" SelectedItem="{Binding selecteddvrconfig, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock x:Uid="tbComment" VerticalAlignment="Center" Text="Comment" Style="{StaticResource BodyTextBlockStyle}"/>
                        <TextBox HorizontalAlignment="Stretch"
                             Text="{Binding comment, Mode=TwoWay}"  VerticalAlignment="Center"
                             HorizontalContentAlignment="Right" />
                    </StackPanel>
                </Grid>
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CommandBarEPGItemSelectedButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <AppBarButton x:Name="abbRecordItem" Margin="0" Width="48" Height="48" 
                          IsEnabled="{x:Bind RecordSelectedEPGItemButtonEnabled, Mode=OneWay}" 
                          HorizontalAlignment="Left" VerticalAlignment="Center"
                          Click="{x:Bind selectedEPGItem.Record}"
                          Foreground="{x:Bind selectedEPGItem.RecordingIconColor, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE1D2;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="UpcomingRecordingListButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbAddButton" Margin="0" Width="48" Height="48" Icon="Add" Click="{x:Bind UpcomingRecordings.AddNewRecording, Mode=OneWay}"
                          HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="True">
            </AppBarButton>
            <AppBarButton x:Name="abbRecordItem" Click="{x:Bind ToggleMultiSelect}" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="{x:Bind DummyBoolTrue}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE762;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Key="RecordingListButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbRecordItem" Click="{x:Bind ToggleMultiSelect}" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="{x:Bind DummyBoolTrue}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE762;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="UpcomingRecordingListEditButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbDeleteItems" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" 
                          IsEnabled="{x:Bind UpcomingRecordings.ItemSelected, Mode=OneWay}"
                          Click="{x:Bind UpcomingRecordings.ShowConfirmDeletePrompt}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE107;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Name="abbAbortItems" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" 
                          IsEnabled="{x:Bind UpcomingRecordings.ItemSelected, Mode=OneWay}"
                          Click="{x:Bind UpcomingRecordings.ShowConfirmCancelPrompt}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xEA39;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton x:Name="abbStopItems" Margin="0" Width="48" Height="48" Icon="Stop" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" 
                          IsEnabled="{x:Bind UpcomingRecordings.ItemSelected, Mode=OneWay}"
                          Click="{x:Bind UpcomingRecordings.ShowConfirmStopPrompt}">
            </AppBarButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FinishedRecordingListEditButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbDeleteItems" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" 
                          IsEnabled="{x:Bind FinishedRecordings.ItemSelected, Mode=OneWay}"
                          Click="{x:Bind FinishedRecordings.ShowConfirmDeletePrompt}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE107;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FailedRecordingListEditButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbDeleteItems" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" 
                          IsEnabled="{x:Bind FailedRecordings.ItemSelected, Mode=OneWay}"
                          Click="{x:Bind FailedRecordings.ShowConfirmDeletePrompt}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE107;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AutoRecordingListEditButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbDeleteItems" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" 
                          IsEnabled="{x:Bind AutoRecordings.ItemSelected, Mode=OneWay}"
                          Click="{x:Bind AutoRecordings.ShowConfirmDeleteAutoRecordingsPrompt}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE107;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AutoRecordingListButtons" x:DataType="local:TVHead_ViewModel">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <!-- TODO : I'm Binding an extra Dummy Boolean Value to IsEnabled, because otherwise the binding 
                 for the Click Event throws an error. Should be a compiler bug cause like this it works-->
            <AppBarButton x:Name="abbAddButton" Margin="0" Width="48" Height="48" Icon="Add" Click="{x:Bind AutoRecordings.AddNewAutoRecording, Mode=OneWay}"
                          HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="True">
            </AppBarButton>
            <AppBarButton x:Name="abbEditButton" Margin="0" Width="48" Height="48" Icon="Edit" Click="{x:Bind AutoRecordings.EditAutoRecording, Mode=OneWay}"
                          HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="{x:Bind AutoRecordings.ItemSelected, Mode=OneWay}">
            </AppBarButton>
            <AppBarButton x:Name="abbRecordItem" Click="{x:Bind ToggleMultiSelect}" Margin="0" Width="48" Height="48" 
                          HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="{x:Bind DummyBoolTrue}">
                <AppBarButton.Icon>
                    <FontIcon Margin="-10" FontFamily="Segoe MDL2 Assets" FontSize="26" Glyph="&#xE762;"/>
                </AppBarButton.Icon>
            </AppBarButton>
        </StackPanel>
    </DataTemplate>




    <DataTemplate x:Key="StartRecordingContentDialog" x:DataType="local:StartRecordingContentDialogViewModel">
        <Grid Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" ContentTemplate="{StaticResource EPGItemHeader}" DataContext="{x:Bind epgitem}" HorizontalContentAlignment="Stretch"/>
            <ContentControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ContentTemplate="{StaticResource ChannelHeaderTemplate}" DataContext="{x:Bind epgitem.Channel, Mode=OneWay}" HorizontalContentAlignment="Stretch"/>
            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <Border Grid.Row="4" Grid.Column="0" VerticalAlignment="Stretch" Margin="0,10,10,0">
                <TextBlock Grid.Row="4" Grid.Column="0" x:Uid="RecordingProfile" Text="Recording profile" VerticalAlignment="Center"/>
            </Border>
            <ComboBox  Grid.Row="4" Grid.Column="1" x:Name="cbDVRConfig" HorizontalAlignment="Stretch" 
                       Margin="0,10,0,0" VerticalAlignment="Top" ItemsSource="{x:Bind dvrconfigs, Mode=OneWay}" 
                       SelectedItem="{Binding dvrconfigs[0]}"
                       SelectionChanged="{x:Bind dvrConfig_SelectionChanged}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Border Grid.Row="5" Grid.Column="0" VerticalAlignment="Stretch" Margin="0,10,10,0">
                <TextBlock x:Uid="RecordingType" Text="Recording type" VerticalAlignment="Center"/>
            </Border>
            <ComboBox  Grid.Row="6" Grid.Column="1" x:Name="cbRecordingType" HorizontalAlignment="Stretch"
                       ItemsSource="{x:Bind RecordingTypes, Mode=OneWay}" SelectedItem="{Binding RecordingTypes[0]}"
                       Margin="0,10,0,0" VerticalAlignment="Top">
            </ComboBox>
        </Grid>
    </DataTemplate>
    
    
    <DataTemplate x:Key="ChannelListDataTemplate" x:DataType="local:ChannelListViewModel">
        <Grid>
            <ListView ItemsSource="{x:Bind items, Mode=OneWay}" 
                      ScrollViewer.VerticalScrollBarVisibility="Hidden" ItemClick="{x:Bind Channel_Clicked}" 
                      SelectionMode="None" IsItemClickEnabled="True" IsHitTestVisible="True" Holding="{x:Bind Channel_Holding}"
                      ItemTemplate="{StaticResource ChannelDataTemplate}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0,0,0,5" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="ChannelDataTemplate" x:DataType="local:ChannelViewModel" >
        <Grid Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
              BorderBrush="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" BorderThickness="1" Padding="4">
            <Grid.Resources>
                <Storyboard x:Name="PulseRecordingIcon">
                    <DoubleAnimation From="1" To="0" Duration="0:0:1" AutoReverse="True" 
                                     RepeatBehavior="Forever" Storyboard.TargetProperty="Opacity" 
                                     Storyboard.TargetName="RecordingIcon"/>
                </Storyboard>
                <Storyboard x:Name="StaticRecordingIcon">
                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetProperty="Opacity" 
                                     Storyboard.TargetName="RecordingIcon"/>
                </Storyboard>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- BACKDROP, USED FOR SHOWING IF THE CHANNEL IS SELECTED OR NOT-->
            <Rectangle x:Name="HeaderBackdrop" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" Margin="-4" Opacity="0.5" Fill="{x:Bind ChannelBackground, Mode=OneWay}"/>
            <!-- CHANNEL ICON-->
            <Image x:Name="rowChannelIcon" Grid.Column="0" Grid.Row="0" Source="{x:Bind chicon}" Width="50" Height="50" HorizontalAlignment="Center" 
               VerticalAlignment="Center" Canvas.ZIndex="99" x:Phase="10"/>

            <!-- SMALL RECORDING ICON AS INDICATOR-->
            <Image x:Name="RecordingIcon" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Visibility="{x:Bind epgitems.currentEPGItem.RecordingStatusIndicatorVisibility, Mode=OneWay}"
                   Height="20" Margin="0" VerticalAlignment="Top" Source="{x:Bind epgitems.currentEPGItem.RecordingIcon, Mode=OneWay}">
                <Interactivity:Interaction.Behaviors>
                    <Core:DataTriggerBehavior Binding="{Binding epgitems.currentEPGItem.dvrState, Mode=OneWay}"  Value="recording">
                        <Media:ControlStoryboardAction Storyboard="{StaticResource PulseRecordingIcon}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{Binding epgitems.currentEPGItem.dvrState, Mode=OneWay}"  Value="scheduled">
                        <Media:ControlStoryboardAction Storyboard="{StaticResource StaticRecordingIcon}" />
                    </Core:DataTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Image>

            <!-- CHANNEL CONTENT - TITLE AND SUBTITLE-->
            <Grid x:Name="btnEPGItemButton" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch"
			  HorizontalAlignment="Stretch" Margin="5,0,5,0" Background="Transparent" >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"
					   Text="{x:Bind name}" Style="{ThemeResource BaseTextBlockStyle}" x:Phase="0"/>
                <TextBlock Grid.Row="1" Style="{ThemeResource BodyTextBlockStyle}" 
                       Foreground="{ThemeResource SystemControlForegroundAccentBrush}" Text="{x:Bind epgitems.currentEPGItem.title, Mode=OneWay}" 
                       TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" x:Phase="0"/>
            </Grid>
            <!-- SECOND ROW - PROGRESS BAR-->
            <Grid x:Name="ProgressBar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <!-- CHANNEL NUMBER IS SHOWN ONLY WHEN SELECTED IN THE SETTINGS MENU-->
                <Border Grid.Column="0" HorizontalAlignment="Stretch" Width="55" Visibility="{x:Bind ChannelNumberVisibility, Mode=OneWay}">
                    <TextBlock Text="{x:Bind number}" HorizontalAlignment="Center" FontWeight="Bold" Style="{StaticResource CaptionTextBlockStyle}" x:Phase="10"/>
                </Border>
                <TextBlock Grid.Column="1" VerticalAlignment="Center"
					       Text="{x:Bind epgitems.currentEPGItem.startDateString, Mode=OneWay}" HorizontalAlignment="Center" 
					       Style="{ThemeResource CaptionTextBlockStyle}" x:Phase="1"/>
                <Rectangle x:Name="progressbackgroundbar" Margin="5,0,5,0" Grid.Column="2" Fill="{StaticResource SystemControlBackgroundChromeBlackMediumBrush}"
                               HorizontalAlignment="Stretch" Height="5"  Opacity="0.2"/>
                <Rectangle x:Name="progress" Margin="5,0,5,0" Grid.Column="2"  Height="5" Fill="{ThemeResource SystemControlBackgroundAccentBrush}">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0"  ScaleX="{x:Bind epgitems.currentEPGItem.percentcompleted, Mode=OneWay}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock Grid.Column="3" x:Phase="1" HorizontalAlignment="Right" VerticalAlignment="Center"
					       Text="{x:Bind epgitems.currentEPGItem.endDateString, Mode=OneWay}" 
					       Style="{ThemeResource CaptionTextBlockStyle}" />
            </Grid>
            <!-- THIRD ROW, SHOW CURRENT EPGITEM DETAILS WHEN EXPANDED-->
            <ContentControl Visibility="{x:Bind CurrentEPGItemDetailsVisibility, Mode=OneWay}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ContentTemplate="{StaticResource ChannelCurrentEPGItemDetails}" 
                            DataContext="{x:Bind epgitems.currentEPGItem, Mode=OneWay}" HorizontalContentAlignment="Stretch"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChannelHeaderTemplate" x:DataType="local:ChannelViewModel">
        <Grid>
            <Image Source="{x:Bind chicon, Mode=OneWay}" Width="32" Height="32" HorizontalAlignment="Left" 
                   VerticalAlignment="Center" x:Phase="1"/>
            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" HorizontalAlignment="Center" VerticalAlignment="Center"
					   Text="{x:Bind name}" Style="{ThemeResource SubtitleTextBlockStyle}" x:Phase="0"/>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChannelListItemTemplate" x:DataType="local:ChannelViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0 " Source="{x:Bind chicon, Mode=OneWay}" Width="16" Height="16" HorizontalAlignment="Left" 
                   VerticalAlignment="Center" x:Phase="1"/>
            <Border Grid.Column="1" Margin="4,0,4,0">
                <TextBlock Text="{x:Bind number}" Style="{StaticResource BaseTextBlockStyle}" x:Phase="0"/>
            </Border>
            <Border Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" 
					       Text="{x:Bind name}" Style="{StaticResource BaseTextBlockStyle}" x:Phase="0"/>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChannelTagListDataTemplate" x:DataType="local:ChannelTagListViewModel">
        <Grid>
            <ComboBox Height="40" ItemsSource="{x:Bind items, Mode=OneWay}" Margin="0"
                      HorizontalAlignment="Stretch" Background="{ThemeResource AppBarItemBackgroundThemeBrush}" 
                      BorderThickness="0" SelectedItem="{x:Bind selectedChannelTag, Mode=OneWay}" SelectionChanged="{x:Bind SelectionChanged}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding name}"  Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Center"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
    </DataTemplate>
    
    
    <DataTemplate x:Key="EPGItemListDataTemplate" x:DataType="local:EPGItemListViewModel">
        <Grid>
            <Grid.Resources>
                <CollectionViewSource x:Key="cvsEPGItems" Source="{x:Bind groupeditems, Mode=OneWay}" IsSourceGrouped="True"/>
            </Grid.Resources>
            <SemanticZoom>
                <SemanticZoom.ZoomedInView>
                    <ListView ItemsSource="{Binding Source={StaticResource cvsEPGItems}, Mode=TwoWay}"  
                              ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                              SelectionMode="None" IsItemClickEnabled="True" ItemTemplate="{StaticResource EPGItem}"
                              ItemClick="{x:Bind EPGItem_Clicked, Mode=OneWay}">
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                        </ListView.GroupStyle>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,5" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView ItemsSource="{Binding Source={StaticResource cvsEPGItems}, Path=CollectionGroups}"
                              ItemTemplate="{StaticResource ListViewJumpListTemplate}">
                    </ListView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RecordingsListDataTemplate" x:DataType="local:RecordingListViewModel">
        <Grid>
            <SemanticZoom>
                <SemanticZoom.Resources>
                    <CollectionViewSource x:Key="csvRecordings" Source="{x:Bind groupeditems, Mode=OneWay}" IsSourceGrouped="True"/>
                </SemanticZoom.Resources>
                <SemanticZoom.ZoomedInView>
                    <ListView ItemsSource="{Binding Source={StaticResource csvRecordings}}"
                              ContinuumNavigationTransitionInfo.ExitElementContainer="True"
                              Style="{StaticResource myListViewStyle}"
                              ItemClick="{x:Bind Recording_Clicked}"
                              IsItemClickEnabled="True"
                              SelectionMode="{x:Bind MultiSelectMode, Mode=OneWay}">
                        <ListView.GroupStyle>
                            <GroupStyle HidesIfEmpty="False" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                        </ListView.GroupStyle>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,5" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ContentControl ContentTemplate="{StaticResource RecordingDataTemplate}" HorizontalContentAlignment="Stretch"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <ListView ItemsSource="{Binding Source={StaticResource csvRecordings}, Path=CollectionGroups}"
                              ItemTemplate="{StaticResource ListViewJumpListTemplate}">
                    </ListView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RecordingDataTemplate" x:DataType="local:RecordingViewModel">
        <Grid Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
              BorderBrush="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" BorderThickness="1" Padding="4">
            <Grid.Resources>
                <Storyboard x:Name="PulseRecordingIcon">
                    <DoubleAnimation From="1" To="0" Duration="0:0:1" AutoReverse="True" 
                                     RepeatBehavior="Forever" Storyboard.TargetProperty="Opacity" 
                                     Storyboard.TargetName="RecordingIcon"/>
                </Storyboard>
                <Storyboard x:Name="StaticRecordingIcon">
                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetProperty="Opacity" 
                                     Storyboard.TargetName="RecordingIcon"/>
                </Storyboard>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="HeaderBackdrop"  Grid.Row="0" Grid.Column="0"  Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0.5" Margin="-4"  Fill="{x:Bind RecordingBackground, Mode=OneWay}"/>

            <!-- RECORDING CHANNEL ICON-->
            <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Source="{x:Bind channel_icon, Mode=OneWay}" 
                   Width="50" Height="50" HorizontalAlignment="Center" 
                   VerticalAlignment="Center" Canvas.ZIndex="99" x:Phase="10"/>

            <!-- RECORDING STATUS INDICATOR-->
            <Image x:Name="RecordingIcon" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                   Height="20" VerticalAlignment="Top" Source="{x:Bind RecordingIcon, Mode=OneWay}">
                <Interactivity:Interaction.Behaviors>
                    <Core:DataTriggerBehavior Binding="{Binding sched_status, Mode=OneWay}"  Value="recording">
                        <Media:ControlStoryboardAction Storyboard="{StaticResource PulseRecordingIcon}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{Binding sched_status, Mode=OneWay}"  Value="scheduled">
                        <Media:ControlStoryboardAction Storyboard="{StaticResource StaticRecordingIcon}" />
                    </Core:DataTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Image>

            <!-- EPG TITLE AND DESCRIPTION-->
            <Grid Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" TextWrapping="NoWrap" TextTrimming="WordEllipsis" 
                           Text="{x:Bind title}" Style="{StaticResource BaseTextBlockStyle}" x:Phase="0"/>
                <TextBlock Grid.Row="1" Text="{x:Bind filesizeGB, Mode=OneWay}" Style="{ThemeResource CaptionTextBlockStyle}"
                           HorizontalAlignment="Right" x:Phase="5"/>
                <TextBlock Grid.Row="1" TextWrapping="NoWrap" 
						   Text="{x:Bind channelName}" Style="{StaticResource BaseTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" x:Phase="1"/>
            </Grid>

            <!-- PROGRESS INDICATOR-->
            <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" TextAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"
					       Text="{x:Bind startTimeString}" TextWrapping="NoWrap" HorizontalAlignment="Left" x:Phase="4" />
                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Height="5" 
					       Margin="5,0,5,0"  Opacity="0.2" Fill="{StaticResource SystemControlBackgroundChromeBlackMediumBrush}"/>
                <Rectangle Grid.Column="1" Height="5"  Fill="{ThemeResource SystemControlBackgroundAccentBrush}"
					       Margin="5,0,5,0" Stretch="Fill">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0" ScaleX="{x:Bind percentcompleted, Mode=OneWay}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock Grid.Column="2" TextAlignment="Right" Text="{x:Bind stopTimeString}" TextWrapping="NoWrap" 
        			       HorizontalAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}" x:Phase="4"/>
            </Grid>
            <!-- RECORDING DETAILS -->
            <ContentControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,4,0,0" 
                            Visibility="{x:Bind RecordingDetailsVisibility, Mode=OneWay}" 
                            ContentTemplate="{StaticResource RecordingDetails}" 
                            DataContext="{x:Bind Mode=OneWay}" HorizontalContentAlignment="Stretch"/>

            
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="RecordingDetails" x:DataType="local:RecordingViewModel">
        <Grid x:Name="grRecordingDetails" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,0,0,0" Text="Channel :" Style="{StaticResource BodyTextBlockStyle}" />
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="10,0,0,0" Text="{Binding channelName}" Style="{StaticResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,0,0,0" Text="Creator :" Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Margin="10,0,0,0" Text="{Binding creator}" Style="{StaticResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,0,0,0" Text="Schedule State :" Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Margin="10,0,0,0" Text="{Binding status}" Style="{StaticResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,0,0,0" Text="Size :" Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Margin="10,0,0,0" Text="{Binding filesizeGB}" Style="{StaticResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="4" Grid.Column="0" Margin="5,0,0,0" Text="URL :" Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="4" Grid.Column="1" Margin="10,0,0,0" Text="{Binding url}" Style="{StaticResource CaptionTextBlockStyle}"/>

            <TextBlock Grid.Row="5" Margin="5,20,0,0" HorizontalAlignment="Left" Text="Description :" Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="6" Grid.ColumnSpan="2" TextWrapping="Wrap" Margin="5,0,0,0" Text="{Binding Path=description}" Style="{StaticResource CaptionTextBlockStyle}"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EPGItem" x:DataType="local:EPGItemViewModel">
        <Grid Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
              BorderBrush="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" BorderThickness="1" Padding="4">
            <Grid.Resources>
                <Storyboard x:Name="PulseRecordingIcon">
                    <DoubleAnimation From="1" To="0" Duration="0:0:1" AutoReverse="True" 
                                     RepeatBehavior="Forever" Storyboard.TargetProperty="Opacity" 
                                     Storyboard.TargetName="RecordingIcon"/>
                </Storyboard>
                <Storyboard x:Name="StaticRecordingIcon">
                    <DoubleAnimation To="1" Duration="0:0:0" Storyboard.TargetProperty="Opacity" 
                                     Storyboard.TargetName="RecordingIcon"/>
                </Storyboard>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <!-- BACKDROP WHICH CHANGES WHEN THE ITEMS ISSELECTED PROPERTY IS SET TO TRUE OR FALSE-->
            <Rectangle x:Name="HeaderBackdrop" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" Margin="-4" Opacity="0.5" Fill="{x:Bind EPGItemBackground, Mode=OneWay}"/>

            <!-- RECORDING STATUS INDICATOR-->
            <Image x:Name="RecordingIcon" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Visibility="{x:Bind RecordingStatusIndicatorVisibility, Mode=OneWay}"
                        Height="20" Margin="0,0,0,0" VerticalAlignment="Top" Source="{x:Bind RecordingIcon, Mode=OneWay}">
                <Interactivity:Interaction.Behaviors>
                    <Core:DataTriggerBehavior Binding="{Binding dvrState, Mode=OneWay}"  Value="recording">
                        <Media:ControlStoryboardAction Storyboard="{StaticResource PulseRecordingIcon}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{Binding dvrState, Mode=OneWay}"  Value="scheduled">
                        <Media:ControlStoryboardAction Storyboard="{StaticResource StaticRecordingIcon}" />
                    </Core:DataTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Image>

            <!-- EPG TITLE AND DESCRIPTION-->
            <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,0,5,0" >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="3" TextWrapping="NoWrap" TextTrimming="WordEllipsis" 
                                    Text="{x:Bind title}" Margin="0,0,0,0" Style="{StaticResource BaseTextBlockStyle}" x:Phase="0"/>
                <TextBlock Grid.Row="1" Grid.ColumnSpan="3" TextWrapping="NoWrap" 
								     Text="{x:Bind info}" Style="{StaticResource BaseTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" x:Phase="1"/>
            </Grid>

            <!-- PROGRESS INDICATOR-->
            <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" TextAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"
					       Text="{x:Bind startDateString}" TextWrapping="NoWrap" HorizontalAlignment="Left"  Margin="0" x:Phase="4" />
                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Height="5" 
					       Margin="5,0,5,0"  Opacity="0.2" Fill="{StaticResource SystemControlBackgroundChromeBlackMediumBrush}"/>
                <Rectangle Grid.Column="1" Height="5"  Fill="{ThemeResource SystemControlBackgroundAccentBrush}"
					       Margin="5,0,5,0" Stretch="Fill">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0" ScaleX="{x:Bind percentcompleted, Mode=OneWay}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock Grid.Column="2" TextAlignment="Right" Text="{x:Bind endDateString}" TextWrapping="NoWrap" 
        			       HorizontalAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}" x:Phase="4"/>
            </Grid>
            <!-- EPG ITEM DETAILS-->
            <ContentControl Grid.Row="2" Visibility="{x:Bind EPGItemDetailsVisibility, Mode=OneWay}" ContentTemplate="{StaticResource ChannelCurrentEPGItemDetails}" 
                            DataContext="{x:Bind Mode=OneWay}" HorizontalContentAlignment="Stretch"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="AutoRecordingsListDataTemplate" x:DataType="local:AutoRecordingListViewModel">
        <Grid>
            <ListView ItemsSource="{Binding aitems, Mode=OneWay}"
                              ContinuumNavigationTransitionInfo.ExitElementContainer="True"
                              Style="{StaticResource myListViewStyle}"
                              ItemClick="{x:Bind AutoRecording_Clicked}"
                              IsItemClickEnabled="True"
                              SelectionMode="{x:Bind MultiSelectMode, Mode=OneWay}">
                <ListView.GroupStyle>
                    <GroupStyle HidesIfEmpty="False" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                </ListView.GroupStyle>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0,0,0,5" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <ContentControl ContentTemplate="{StaticResource AutoRecordingDataTemplate}" HorizontalContentAlignment="Stretch"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="AutoRecordingDataTemplate" x:DataType="local:AutoRecordingViewModel">
        <Grid Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
              BorderBrush="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" 
              BorderThickness="1" Padding="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <!-- AUTORECORDING BACKDROP -->
            <Rectangle x:Name="HeaderBackdrop"  Grid.Row="0" Grid.Column="0"  Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0.5" Margin="-4"  Fill="{x:Bind AutoRecordingBackground, Mode=OneWay}"/>

            <!-- AUTORECORDING CHANNEL ICON-->
            <Image Grid.Column="0" Grid.Row="0" Source="{x:Bind channel_icon, Mode=OneWay}" Width="50" Height="50" HorizontalAlignment="Center" 
                   VerticalAlignment="Center" Canvas.ZIndex="99" x:Phase="10"/>
            <!-- INDICATOR IF THE AUTORECORDING IS ENABLED OR NOT -->
            <ToggleSwitch Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                          IsEnabled="False" IsOn="{x:Bind enabled, Mode=OneWay}" Style="{StaticResource BorderlessToggleSwitchStyle}"/>

            <!-- AUTORECORDING CONTENT-->
            <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource BaseTextBlockStyle}"
                           Text="{Binding displayName}" VerticalAlignment="Center"/>-->
                <TextBlock Grid.Row="0" Style="{StaticResource BaseTextBlockStyle }"
                           Text="{Binding title}" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding channelname}" Style="{StaticResource BaseTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" Grid.Row="1" VerticalAlignment="Center"
                           />
                <!--<TextBlock Text="{Binding recordingDays}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center"
                           Style="{StaticResource CaptionTextBlockStyle}"/>-->

                <!-- AUTORECORDING ON WHICH DAYS-->
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" IsChecked="{x:Bind RecordingOnDay[0]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[0]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                    <CheckBox Grid.Column="1" IsChecked="{x:Bind RecordingOnDay[1]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[1]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                    <CheckBox Grid.Column="2" IsChecked="{x:Bind RecordingOnDay[2]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[2]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                    <CheckBox Grid.Column="3" IsChecked="{x:Bind RecordingOnDay[3]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[3]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                    <CheckBox Grid.Column="4" IsChecked="{x:Bind RecordingOnDay[4]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[4]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                    <CheckBox Grid.Column="5" IsChecked="{x:Bind RecordingOnDay[5]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[5]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                    <CheckBox Grid.Column="6" IsChecked="{x:Bind RecordingOnDay[6]}" IsEnabled="False" Style="{StaticResource DayCheckBoxStyle}">
                        <TextBlock Text="{x:Bind RecordingDays[6]}" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </CheckBox>
                </Grid>
            </Grid>

            
            
        </Grid>
    </DataTemplate>
    
    
    
    <DataTemplate x:Key="SelectedEPGItemDataTemplate" x:DataType="local:TVHead_ViewModel" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Bind selectedEPGItem.title, Mode=OneWay}" Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Center"/>
            </Border>
            <Border Grid.Row="1" HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Bind selectedEPGItem.subtitle, Mode=OneWay}" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" 
                           FontWeight="Bold"  Style="{StaticResource BaseTextBlockStyle}" HorizontalAlignment="Center"/>
            </Border>
            <Border Grid.Row="2" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <ContentControl Grid.Row="3" ContentTemplate="{StaticResource ChannelHeaderTemplate}" DataContext="{x:Bind SelectedChannel, Mode=OneWay}" HorizontalContentAlignment="Stretch"/>
            <Border Grid.Row="4" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <Grid Grid.Row="5" HorizontalAlignment="Stretch" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" TextAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"
					       Text="{x:Bind selectedEPGItem.startDateString, Mode=OneWay}" TextWrapping="NoWrap" HorizontalAlignment="Left"  Margin="0" x:Phase="4" />
                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Height="5" 
					       Margin="5,0,5,0"  Opacity="0.2" Fill="{StaticResource SystemControlBackgroundChromeBlackMediumBrush}"/>
                <Rectangle Grid.Column="1" Height="5"  Fill="{ThemeResource SystemControlBackgroundAccentBrush}"
					       Margin="5,0,5,0" Stretch="Fill">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0" ScaleX="{x:Bind selectedEPGItem.percentcompleted, Mode=OneWay}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock Grid.Column="2" TextAlignment="Right" Text="{x:Bind selectedEPGItem.endDateString, Mode=OneWay}" TextWrapping="NoWrap" 
        			       HorizontalAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}" x:Phase="4"/>
            </Grid>
            <Border Grid.Row="6" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <TextBlock Grid.Row="7"  Text="Genre" 
                       Margin="0" FontWeight="Bold"  Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="8" Grid.Column="1" Margin="0,0,10,0"
                       HorizontalAlignment="Left" Text="{x:Bind selectedEPGItem.genreName, Mode=OneWay}" Style="{ThemeResource CaptionTextBlockStyle}"
                       VerticalAlignment="Center"/>
            <TextBlock Grid.Row="9" Grid.Column="0" Margin="0"
                       Text="Description" FontWeight="Bold" Style="{ThemeResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2" Style="{ThemeResource CaptionTextBlockStyle}"
                       TextWrapping="WrapWholeWords" HorizontalAlignment="Left" Margin="0,0,10,0" Text="{x:Bind selectedEPGItem.description, Mode=OneWay}" />

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="EPGItemHeader" x:DataType="local:EPGItemViewModel">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Bind title}" Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Center"/>
            </Border>
            <Border Grid.Row="1" HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Bind subtitle}" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" 
                           FontWeight="Bold"  Style="{StaticResource BaseTextBlockStyle}" HorizontalAlignment="Center"/>
            </Border>

            <Border Grid.Row="2" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <Grid Grid.Row="3" HorizontalAlignment="Stretch" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" TextAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"
					       Text="{x:Bind startDateString}" TextWrapping="NoWrap" HorizontalAlignment="Left"  Margin="0" x:Phase="4" />
                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Height="5" 
					       Margin="5,0,5,0"  Opacity="0.2" Fill="{StaticResource SystemControlBackgroundChromeBlackMediumBrush}"/>
                <Rectangle Grid.Column="1" Height="5"  Fill="{ThemeResource SystemControlBackgroundAccentBrush}"
					       Margin="5,0,5,0" Stretch="Fill">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0" ScaleX="{x:Bind percentcompleted, Mode=OneWay}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock Grid.Column="2" TextAlignment="Right" Text="{x:Bind endDateString}" TextWrapping="NoWrap" 
        			       HorizontalAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}" x:Phase="4"/>
            </Grid>
            <Border Grid.Row="4" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="EPGItemTitle" x:DataType="local:EPGItemViewModel">
        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBlock Text="{x:Bind title}" Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </DataTemplate>

    
    
    
    <DataTemplate x:Key="EPGItemDetails" x:DataType="local:EPGItemViewModel">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Bind title}" Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Center"/>
            </Border>
            <TextBlock Grid.Row="0"  FontSize="10" Text="{x:Bind eventId}" HorizontalAlignment="Right" x:Phase="5"/>
            <Border Grid.Row="1" HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Bind subtitle}" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" 
                           FontWeight="Bold"  Style="{StaticResource BaseTextBlockStyle}" HorizontalAlignment="Center"/>
            </Border>
            
            <Border Grid.Row="2" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <Grid Grid.Row="3" HorizontalAlignment="Stretch" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" TextAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"
					       Text="{x:Bind startDateString}" TextWrapping="NoWrap" HorizontalAlignment="Left"  Margin="0" x:Phase="4" />
                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Height="5" 
					       Margin="5,0,5,0"  Opacity="0.2" Fill="{StaticResource SystemControlBackgroundChromeBlackMediumBrush}"/>
                <Rectangle Grid.Column="1" Height="5"  Fill="{ThemeResource SystemControlBackgroundAccentBrush}"
					       Margin="5,0,5,0" Stretch="Fill">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0" ScaleX="{x:Bind percentcompleted, Mode=OneWay}" />
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock Grid.Column="2" TextAlignment="Right" Text="{x:Bind endDateString}" TextWrapping="NoWrap" 
        			       HorizontalAlignment="Right" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}" x:Phase="4"/>
            </Grid>
            <Border Grid.Row="4" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <TextBlock Grid.Row="5"  Text="Genre" 
                       Margin="0" FontWeight="Bold"  Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="6" Grid.Column="1" Margin="0,0,10,0"
                       HorizontalAlignment="Left" Text="{x:Bind genreName}" Style="{ThemeResource CaptionTextBlockStyle}"
                       VerticalAlignment="Center"/>
            <TextBlock Grid.Row="7" Grid.Column="0" Margin="0"
                       Text="Description" FontWeight="Bold" Style="{ThemeResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" Style="{ThemeResource CaptionTextBlockStyle}"
                       TextWrapping="WrapWholeWords" HorizontalAlignment="Left" Margin="0,0,10,0" Text="{x:Bind description}" />

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="ChannelCurrentEPGItemDetails" x:DataType="local:EPGItemViewModel">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="8"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <!--<Border Grid.Row="0" Height="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"/>-->
            <TextBlock Grid.Row="1" Grid.ColumnSpan="3" FontSize="10" Text="{x:Bind eventId}" HorizontalAlignment="Right" x:Phase="5"/>
            <TextBlock Grid.Row="1"  Text="Genre" 
                       Margin="0" FontWeight="Bold"  Style="{StaticResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Margin="0,0,10,0"
                       HorizontalAlignment="Left" Text="{x:Bind genreName}" Style="{ThemeResource CaptionTextBlockStyle}"
                       VerticalAlignment="Center"/>
            <TextBlock Grid.Row="3" Grid.Column="0" Margin="0"
                       Text="Description" FontWeight="Bold" Style="{ThemeResource BodyTextBlockStyle}"/>
            <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Style="{ThemeResource CaptionTextBlockStyle}"
                       TextWrapping="WrapWholeWords" HorizontalAlignment="Left" Margin="0,0,10,0" Text="{x:Bind description}" />

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="TVHStatus" x:DataType="local:TVHead_ViewModel">
        <Grid x:Name="ContentPanel" Margin="0" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Enabled">
                <StackPanel Orientation="Vertical">
                    <Border HorizontalAlignment="Stretch" BorderThickness="0,0,1,0">
                        <TextBlock Style="{StaticResource TitleTextBlockStyle}" Text="Streams"/>
                    </Border>
                    <ContentControl HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" ContentTemplate="{StaticResource StreamList}" DataContext="{x:Bind Streams}" Background="Yellow"/>
                    <Border HorizontalAlignment="Stretch" BorderThickness="0,0,1,0">
                        <TextBlock Style="{StaticResource TitleTextBlockStyle}" Text="Subscriptions"/>
                    </Border>
                    <ContentControl HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" ContentTemplate="{StaticResource SubscriptionList}" DataContext="{x:Bind Subscriptions}" Background="Purple"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CometStatistics" x:DataType="local:CometStatsViewModel">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,5,0" Text="create" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="2" Margin="5,0,5,0" Text="update" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="3" Margin="5,0,5,0" Text="change" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="4" Margin="5,0,5,0" Text="delete" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="5" Margin="5,0,5,0" Text="dvr_update" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="6" Margin="5,0,5,0" Text="dvr_delete" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,0,5,0" Text="epg" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="{x:Bind intEPGCreate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="2" Text="{x:Bind intEPGUpdate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="3" Text="{x:Bind intEPGChange, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="4" Text="{x:Bind intEPGDelete, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="5" Text="{x:Bind intEPGDVRUpdate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="6" Text="{x:Bind intEPGDVRDelete, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,0,5,0" Text="dvrentry" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Text="{x:Bind intDVRCreate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="2" Text="{x:Bind intDVRUpdate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="3" Text="{x:Bind intDVRChange, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="2" Grid.Column="4" Text="{x:Bind intDVRDelete, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>

            <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,0,5,0" Text="dvrautorec" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Text="{x:Bind intDVRAutoRecCreate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="3" Grid.Column="2" Text="{x:Bind intDVRAutoRecUpdate, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="3" Grid.Column="3" Text="{x:Bind intDVRAutoRecChange, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
            <TextBlock Grid.Row="3" Grid.Column="4" Text="{x:Bind intDVRAutoRecDelete, Mode=OneWay}" HorizontalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}"/>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="StreamDataTemplate" x:DataType="vm:StreamViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image  Grid.Row="0" Grid.Column="0" Height="20" Width="20" Source="/Images/adapter.png"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3"  TextWrapping="NoWrap" 
                    TextTrimming="WordEllipsis" Text="{x:Bind name}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="0" Grid.Row="1" Source="/Images/mux.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="1" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind currentMux}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="2" Grid.Row="1" Source="/Images/weight.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="3" Grid.Row="1" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{Binding weight}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="0" Grid.Row="2" Source="/Images/signalstrength.png" Height="20" Width="20"/>
            <Rectangle x:Name="signalBackground" HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="1" Height="5" 
					    Margin="10,0,10,0" Fill="DarkGray"/>
            <Rectangle x:Name="signal" Grid.Row="2" Grid.Column="1" Height="5" 
					    Margin="10,0,10,0" Stretch="Fill" >
                <Rectangle.RenderTransform>
                    <ScaleTransform x:Name="ProgressBarScale" CenterX="0" CenterY="0" ScaleX="{x:Bind signal_percentage}" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Image Grid.Column="2" Grid.Row="2" Margin="0,0,0,0" Source="/Images/snr.png" Height="20" Width="20"/>
            <Rectangle x:Name="snrBackground" HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="3" Height="5" 
					    Margin="10,0,10,0" Fill="DarkGray"/>
            <Rectangle x:Name="snr" Grid.Row="2" Grid.Column="3" Height="5" 
					    Margin="10,0,10,0" Stretch="Fill" >
                <Rectangle.RenderTransform>
                    <ScaleTransform x:Name="snrScale" CenterX="0" CenterY="0" ScaleX="{Binding snr_percentage}" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Image Grid.Column="0" Grid.Row="3" Source="/Images/bandwidth.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="3" TextWrapping="NoWrap" 
				    Text="{x:Bind bandwidth_string, Mode=OneWay}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            
            <Image Grid.Column="2" Grid.Row="3" Source="/Images/transport_error.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="5" Grid.Row="3" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind errors_string, Mode=OneWay}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>


        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SubscriptionDataTemplate" x:DataType="vm:SubscriptionViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image  Grid.Row="0" Grid.Column="0" Height="20" Width="20" Source="/Images/title.png"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="0" TextWrapping="NoWrap" 
                    TextTrimming="WordEllipsis" Text="{x:Bind title}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image  Grid.Row="1" Grid.Column="0" Height="20" Width="20" Source="/Images/tv.png"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="1" TextWrapping="NoWrap" 
                    TextTrimming="WordEllipsis" Text="{x:Bind channel}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image  Grid.Row="1" Grid.Column="2" Height="20" Width="20" Source="/Images/state.png"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="3" Grid.Row="1" TextWrapping="NoWrap" 
                    TextTrimming="WordEllipsis" Text="{x:Bind state}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="0" Grid.Row="2" Source="/Images/adapter.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3"  TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind service}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="2" Grid.Row="0" Source="/Images/transport_error.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="3" Grid.Row="0" TextWrapping="NoWrap" 
				    Text="{x:Bind errors}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="0" Grid.Row="3" Source="/Images/in.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="3" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind kbps_in_string, Mode=OneWay}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="2" Grid.Row="3" Source="/Images/out.png" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="3" Grid.Row="3" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind kbps_out_string, Mode=OneWay}" VerticalAlignment="Center" 
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="0" Grid.Row="4" Source="/Images/host.png" Visibility="{x:Bind hostname_usernameVisibility}" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.Row="4" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind hostname}" VerticalAlignment="Center" 
            	    Visibility="{x:Bind hostname_usernameVisibility}"
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="2" Grid.Row="4" Source="/Images/user.png"  Visibility="{x:Bind hostname_usernameVisibility}" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="3" Grid.Row="4" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind username}" VerticalAlignment="Center" 
					    Visibility="{x:Bind hostname_usernameVisibility}"
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
            <Image Grid.Column="0" Grid.Row="5" Source="/Images/descramble.png"  Visibility="{x:Bind descrambleVisibility}" Height="20" Width="20"/>
            <TextBlock Margin="10,0,0,0" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="5" TextWrapping="NoWrap" 
				    TextTrimming="WordEllipsis" Text="{x:Bind descramble}" VerticalAlignment="Center" 
				    Visibility="{x:Bind descrambleVisibility}"
                    Style="{ThemeResource CaptionTextBlockStyle}"/>
        </Grid>
    </DataTemplate>
    
    
    <DataTemplate x:Key="StreamList" x:DataType="vm:StreamListViewModel">
        <ListView ItemsSource="{x:Bind items, Mode=OneWay}" Margin="0" ScrollViewer.VerticalScrollMode="Disabled"
                  ItemTemplate="{StaticResource StreamDataTemplate}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0,0,5,10" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </DataTemplate>

    <DataTemplate x:Key="SubscriptionList" x:DataType="vm:SubscriptionListViewModel">
        <ListView ItemsSource="{x:Bind items, Mode=OneWay}" Margin="0" ScrollViewer.VerticalScrollMode="Disabled"
                  ItemTemplate="{StaticResource SubscriptionDataTemplate}" >
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0,0,5,10" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </DataTemplate>

    <DataTemplate x:Key="SettingsMenuDataTemplate" x:DataType="local:TVHead_ViewModel">
        <Grid Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Visible" Grid.Row="1" Margin="0,0,0,0">
                <Grid HorizontalAlignment="Center" Margin="10,0,15,0">
                    <StackPanel Orientation="Vertical" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3">
                        <TextBlock x:Name="tbServerHeader" Margin="0,5,0,5"  Text="Server settings" Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"/>
                        <TextBlock x:Uid="ipaddress" Text="IP address or hostname" Name="tbIPAddress2" />
                        <TextBox   Text="{x:Bind TVHeadSettings.ServerIPSetting, Mode=TwoWay}"  IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"  />
                        <TextBlock x:Uid="port"  Text="Port" VerticalAlignment="Center"/>
                        <TextBox   InputScope="Number" Name="port" Text="{x:Bind TVHeadSettings.ServerPortSetting, Mode=TwoWay}" />
                        <TextBlock x:Uid="username"  Text="Username"/>
                        <TextBox   Text="{x:Bind TVHeadSettings.UsernameSetting, Mode=TwoWay}"  IsTextPredictionEnabled="False" IsSpellCheckEnabled="False"/>
                        <TextBlock x:Uid="password"   Text="Password" VerticalAlignment="Center"/>
                        <PasswordBox Password="{x:Bind TVHeadSettings.PasswordSetting, Mode=TwoWay}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Button x:Uid="btntestconnection" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"  x:Name="btnTestConnection"  Content="Test Connection"/>
                            <TextBlock x:Name="tbTestResult" Grid.Row="0" Grid.Column="1" Margin="10,0,0,0"  VerticalAlignment="Center"/>
                            <ProgressBar x:Name="pbTestResult" Grid.Row="1" Grid.Column="1" Margin="10,0,0,0" Background="Transparent" Height="10" IsIndeterminate="False" VerticalAlignment="Center"/>
                        </Grid>
                        <TextBlock x:Name="tbLanguage" x:Uid="tbLanguage" Margin="0,20,0,0"  Text="Language"/>
                        <ComboBox x:Name="cbLanguage" HorizontalAlignment="Stretch" ItemsSource="{Binding supportedLanguages.languages}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding val}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--<TextBlock x:Name="tbUseDarkTheme" Margin="0,20,0,0"  Text="Preferred Theme" Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"/>
                        <TextBlock x:Name="tbUseDarkThemeCaption" Margin="0,5,0,0"  Text="Select the theme color you want to use for TV Head (requires restart)" TextWrapping="WrapWholeWords" Style="{StaticResource CaptionTextBlockStyle}"/>
                        <StackPanel Orientation="Horizontal">
                            <RadioButton Content="Dark" GroupName="ThemeChoices" IsChecked="{x:Bind TVHeadSettings.UseDarkTheme, Mode=TwoWay}"/>
                            <RadioButton Content="Light" GroupName="ThemeChoices" IsChecked="{x:Bind TVHeadSettings.UseLightTheme, Mode=TwoWay}"/>
                        </StackPanel>-->
                        <TextBlock x:Name="tbAutoRefreshHeader" x:Uid="tbAutoRefreshHeader" Margin="0,20,0,0" Text="Auto Refresh" Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"/>
                        <TextBlock x:Uid="tbAutoRefresh" Text="When Automatic Refresh is enabled, the app listens for incoming status updates from the TVH server. When disabled the app refreshes it's information periodically. Recommended setting is On for TVH 4.x, and Off for anything below." TextWrapping="Wrap" Style="{ThemeResource CaptionTextBlockStyle}"/>
                        <ToggleSwitch IsOn="{x:Bind TVHeadSettings.LongPollingEnabled, Mode=TwoWay}" Margin="0,0,0,0"/>
                        <TextBlock x:Name="tbChannelGroup" x:Uid="tbChannelGroup" Margin="0,20,0,0"  Text="Favourite Channel Tag" Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"/>
                        <TextBlock x:Name="tbChannelGroupExplanation" x:Uid="tbChannelGroupExplanation"  Text="Select your favourite channel tag. Channels within this tag will be loaded on startup. If no channel tags exist, or all channel tags are disabled, all channels will be loaded by default (not recommended)." Style="{ThemeResource CaptionTextBlockStyle}"/>
                        <ComboBox x:Name="cbChannelTags" ItemsSource="{x:Bind ChannelTags.items, Mode=OneWay}" 
                                  SelectedItem="{x:Bind ChannelTags.favouriteChannelTag, Mode=OneWay}" SelectionChanged="{x:Bind ChannelTags.FavouriteChanged}"
                                  HorizontalAlignment="Stretch" Margin="0,10,0,0" Background="{ThemeResource SystemControlBackgroundListLowBrush}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate x:DataType="local:ChannelTagViewModel">
                                    <TextBlock Text="{x:Bind name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock x:Uid="tbChannels" Margin="0,20,0,10" Text="Channels" Style="{StaticResource FlyoutPickerTitleTextBlockStyle}"/>
                        <ToggleSwitch x:Uid="tsHideNumberlessChannels"  Header="Hide Channels without a channel number" IsOn="{x:Bind TVHeadSettings.HideNumberlessChannels, Mode=TwoWay}"/>
                        <ToggleSwitch x:Uid="tsShowChannelNumbers" Header="Show Channel Numbers" Margin="0" IsOn="{Binding TVHeadSettings.ShowChannelNumbers, Mode=TwoWay}" />
                        <TextBlock x:Uid="Recordings" Margin="0,20,0,10" Text="Recordings" Style="{StaticResource FlyoutPickerTitleTextBlockStyle}" />
                        <ToggleSwitch x:Uid="tsConfirmDeletion" Header="Confirm Recording Deletion" Margin="0" IsOn="{x:Bind TVHeadSettings.ConfirmDeletion, Mode=TwoWay}" />
                        <ToggleSwitch x:Uid="tsShowRecordingOptions" Header="Prompt for recording type (auto or single)" Margin="0" IsOn="{x:Bind TVHeadSettings.ProposeAutoRecording, Mode=TwoWay}" />
                    </StackPanel>
                </Grid>

            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ListViewJumpListTemplate">
        <Border HorizontalAlignment="Stretch">
            <TextBlock Grid.Column="0" Text="{Binding Group.KeyString}" 
                               Style="{StaticResource BaseTextBlockStyle}" VerticalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ListViewHeaderTemplate">
        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBlock Text="{Binding KeyString}"  VerticalAlignment="Center" 
                               HorizontalAlignment="Left" Style="{StaticResource BaseTextBlockStyle}"/>
        </Border>
    </DataTemplate>

</ResourceDictionary>
